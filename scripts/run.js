const main = async () => {
    //Para fazer o deploy de algo na blockchain, precisamos ter um endere√ßo de carteira! A Hardhat faz isso para n√≥s magicamente em segundo plano, mas aqui pegamos o endere√ßo da carteira do propriet√°rio do contrato e tamb√©m pegamos um endere√ßo aleat√≥rio da carteira e chamamos de randomPerson.Isso far√° mais sentido em um momento.
    const [owner, randomPerson] = await hre.ethers.getSigners();


    //Esse trecho compilar√° nosso contrato e gerar√° os arquivos necess√°rios que precisamos para trabalhar com nosso contrato no diret√≥rio artifacts.V√° dar uma olhada depois que colocar para executar üòä
    const waveContractFactory = await hre.ethers.getContractFactory("WavePortal");


    // O que est√° acontecendo aqui √© que a Hardhat criar√° uma rede Ethereum local, mas apenas para este contrato.Ent√£o, depois que o script for conclu√≠do, ele destruir√° essa rede local.Ent√£o, toda vez que voc√™ executar o contrato, ser√° uma nova blockchain.
    const waveContract = await waveContractFactory.deploy();


    //Vamos esperar at√© que o nosso contrato seja oficialmente implantado na nossa blockchain local! Nosso constructor √© executado quando fazemos o deploy.
    await waveContract.deployed();

    //Finalmente, uma vez implantado, o waveContract.address basicamente nos dar√° o endere√ßo do contrato.Este endere√ßo √© a forma como podemos encontrar nosso contrato na blockchain.Existem milh√µes de contratos no blockchain real.Assim, este endere√ßo nos d√° acesso f√°cil ao contrato com o qual estamos interessados em trabalhar! Isso ser√° mais importante um pouco mais tarde, quando implantarmos em uma rede Ethereum real.
    console.log("Contract deployed to:", waveContract.address);

    console.log("Contract deployed by:", owner.address)

    let db = []


    let waveCount;
    waveCount = await waveContract.getTotalWaves();

    let waveTxn = await waveContract.wave();
    await waveTxn.wait()

    waveCount = await waveContract.getTotalWaves()

    for (let i = 0; i < 3; i++) {

        waveTxn = await waveContract.connect(randomPerson).wave();
        await waveTxn.wait()

        db.push({ address: randomPerson })
    }

    waveCount = await waveContract.getTotalWaves()

    console.log("Endere√ßos que der√£o tchauzinho!", db)
}

const runMain = async () => {
    try {
        await main();
        process.exit(0)
    } catch (error) {
        console.log(error)
        process.exit(1)
    }
}

runMain();